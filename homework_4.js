///Напишите функцию min, принимающую два аргумента, и возвращающую минимальный из них.
function min(a, b){
  if (a < b){
    return a;
  }
  else if( b < a){
    return b;
  }
}
console.log(min(10, 15));
console.log(min(-10, 8));



//2. Символ номер N строки можно получить, добавив к ней .charAt(N) ( “строчка”.charAt(5) ) – 
//схожим образом с получением длины строки при помощи .length.
//Возвращаемое значение будет строковым, состоящим из одного символа (к примеру, “к”). 
//У первого символа строки позиция 0, что означает, что у последнего символа позиция будет string.length – 1. \
//Другими словами, у строки из двух символов длина 2, а позиции её символов будут 0 и 1.
//Напишите функцию countBs, которая принимает строку в качестве аргумента, и возвращает количество символов “B”,
//содержащихся в строке.Затем напишите функцию countChar, которая работает примерно как countBs,
//только принимает второй параметр — символ, который мы будем искать в строке 
//(вместо того, чтобы просто считать количество символов “B”). Для этого переделайте функцию countBs. 
function countBs(str) {
  var i,counter=0;
  for(i=0;i<str.length;i++ ) {
    if(str.charAt(i)=='B') counter++;
  }
  return counter;
}
function countChar(str,char) {
  var i,counter=0;
  for(i=0;i<str.length;i++ ) {
    if(str.charAt(i)==char) counter++;
  }
  return counter;
}
console.log(countBs('AAABBBCCCAAAaaa'));
console.log(countChar('GameBaB','B'));

//3. * Ноль чётный. Единица нечётная. У любого числа N чётность такая же, как у N-2.
//Напишите рекурсивную функцию isEven согласно этим правилам. 
//Она должна принимать число и возвращать булевское значение. Потестируйте её на 50 и 75. 
//Попробуйте задать ей -1. Почему она ведёт себя таким образом? Можно ли её как-то исправить?
function isEven(n) {
  if (n == 0) return true;
  
  else if (n == 1) return false;
      
  else if (n < 0) return isEven(-n);

  else return isEven(n - 2);
